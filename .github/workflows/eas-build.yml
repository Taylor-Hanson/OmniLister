name: EAS Build and Submit

on:
  push:
    branches: [main]
    paths:
      - 'apps/mobile/**'
      - 'packages/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/mobile/**'
      - 'packages/**'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ios
          - android
      profile:
        description: 'Build profile'
        required: true
        default: 'preview'
        type: choice
        options:
          - development
          - preview
          - production
      submit:
        description: 'Submit to stores after build'
        required: false
        default: false
        type: boolean

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  build:
    name: Build and Submit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: |
          cd apps/mobile/OmniListerMobile
          npm ci

      - name: Build for iOS
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios' }}
        run: |
          cd apps/mobile/OmniListerMobile
          eas build --platform ios --profile ${{ github.event.inputs.profile || 'preview' }} --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build for Android
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' }}
        run: |
          cd apps/mobile/OmniListerMobile
          eas build --platform android --profile ${{ github.event.inputs.profile || 'preview' }} --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to App Store (iOS)
        if: ${{ github.event.inputs.submit == 'true' && (github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios') }}
        run: |
          cd apps/mobile/OmniListerMobile
          eas submit --platform ios --profile ${{ github.event.inputs.profile || 'preview' }} --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to Play Store (Android)
        if: ${{ github.event.inputs.submit == 'true' && (github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android') }}
        run: |
          cd apps/mobile/OmniListerMobile
          eas submit --platform android --profile ${{ github.event.inputs.profile || 'preview' }} --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Comment build status on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Mobile Build Status')
            );
            
            const commentBody = `## ðŸ“± Mobile Build Status
            
            **Platform**: ${{ github.event.inputs.platform || 'all' }}
            **Profile**: ${{ github.event.inputs.profile || 'preview' }}
            **Submit**: ${{ github.event.inputs.submit || 'false' }}
            
            Build completed successfully! ðŸŽ‰
            
            Check the [EAS dashboard](https://expo.dev/accounts/${{ secrets.EXPO_USERNAME }}/projects/omnilister-mobile/builds) for build details.
            `;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
